Docker: Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly.By using Docker methodologies we can significantly reduce the delay between writing code and running it in production.

Docker platform: Docker provides the ability to package and run an application in a loosely isolated environment called a container.  Containers are lightweight and contain everything needed to run the application, so you don't need to rely on what's installed on the host.

why we need docker: Your developers write code locally and share their work with their colleagues using Docker containers.
    They use Docker to push their applications into a test environment and run automated and manual tests.
    When developers find bugs, they can fix them in the development environment and redeploy them to the test environment for testing and validation.
    When testing is complete, getting the fix to the customer is as simple as pushing the updated image to the production environment.

docker registry: A Docker registry stores Docker images. Docker Hub is a public registry that anyone can use, and Docker looks for images on Docker Hub by default. You can even run your own private registry.When you use the docker pull or docker run commands, Docker pulls the required images from your configured registry. When you use the docker push command, Docker pushes your image to your configured registry.

When you use the docker pull or docker run commands, Docker pulls the required images from your configured registry. When you use the docker push command, Docker pushes your image to your configured registry.


Image: image is a read-only template with instructions for creating a Docker container. Often, an image is based on another image, with some additional customization.You might create your own images or you might only use those created by others and published in a registry. To build your own image, you create a Dockerfile with a simple syntax for defining the steps needed to create the image and run it. Each instruction in a Dockerfile creates a layer in the image.
